
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTkOrleftTkAndleftTkEqualTkNEqualnonassocTkLessTkLeqTkGreaterTkGeqleftTkPlusTkMinusleftTkMultnonassocTkApprightTkNotrightUMINUSERROR TkAnd TkApp TkArrow TkAsig TkBool TkCBlock TkCBracket TkClosePar TkComma TkElse TkEnd TkEqual TkFalse TkFi TkFunction TkGeq TkGreater TkGuard TkId TkIf TkInt TkLeq TkLess TkMinus TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOpenPar TkOr TkPlus TkPrint TkSemicolon TkSkip TkSoForth TkString TkTrue TkTwoPoints TkWhileprogram : new_block declarations TkSemicolon instructions TkCBlock\n                | new_block instructions TkCBlocknew_block : TkOBlockdeclarations : declarations TkSemicolon declaration\n                    | declarationdeclaration : TkInt idlist\n                   | TkBool idlist\n                   | TkFunction TkOBracket TkSoForth TkNum TkCBracket idlistidlist : idlist TkComma id\n              | idid : TkIdexpressionlist : expressionlist TkComma expression\n                        | expression TkComma expressioninstructions : instructions TkSemicolon instruction\n                    | instructioninstruction : while\n                   | if\n                   | print\n                   | skip\n                   | programinstruction : TkId TkAsig expression\n                    | TkId TkAsig expressionlist\n                    | TkId TkAsig functionModprint : TkPrint expression\n             | TkPrint stringskip : TkSkipwhile : TkWhile expression TkArrow instructions TkEndif : TkIf guardlist TkFiguardlist : guardlist TkGuard guard\n                 | guardguard : expression TkArrow instructionsexpression : expression TkPlus expression\n                | expression TkMinus expression\n                | expression TkMult expression\n                | expression TkLeq expression\n                | expression TkGeq expression\n                | expression TkLess expression\n                | expression TkGreater expression\n                | expression TkEqual expression\n                | expression TkNEqual expression\n                | expression TkOr expression\n                | expression TkAnd expressionexpression : TkNot expression\n                  | TkMinus expression %prec UMINUSexpression : expression TkApp TkId\n                  | expression TkApp TkNumexpression : TkId TkApp expressionexpression : functionMod TkApp expressionfunctionMod : functionMod TkOpenPar twopoints TkClosePar\n                    | TkId TkOpenPar twopoints TkClosePartwopoints : expression TkTwoPoints expressionexpression : TkIdexpression : TkOpenPar expression TkCloseParstring : TkStringstring : string TkPlus string\n                | expression TkPlus string\n                | string TkPlus expressionexpression : TkNum\n                  | TkTrue\n                  | TkFalse'
    
_lr_action_items = {'TkOBlock':([0,2,3,21,23,53,75,],[3,3,-3,3,3,3,3,]),'$end':([1,22,78,],[0,-2,-1,]),'TkInt':([2,3,21,],[8,-3,8,]),'TkBool':([2,3,21,],[9,-3,9,]),'TkFunction':([2,3,21,],[10,-3,10,]),'TkId':([2,3,8,9,17,18,19,21,23,29,31,32,36,48,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,75,76,77,81,82,109,114,116,],[16,-3,26,26,33,33,33,16,16,33,33,33,33,26,16,33,33,33,33,33,33,33,33,33,33,33,95,33,33,33,33,33,16,33,33,33,33,26,33,33,]),'TkWhile':([2,3,21,23,53,75,],[17,-3,17,17,17,17,]),'TkIf':([2,3,21,23,53,75,],[18,-3,18,18,18,18,]),'TkPrint':([2,3,21,23,53,75,],[19,-3,19,19,19,19,]),'TkSkip':([2,3,21,23,53,75,],[20,-3,20,20,20,20,]),'TkSemicolon':([4,5,6,7,11,12,13,14,15,20,22,24,25,26,27,33,34,37,38,42,43,44,45,46,47,50,51,52,66,67,73,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,104,105,106,107,108,110,111,112,113,115,117,119,],[21,23,-5,-15,-16,-17,-18,-19,-20,-26,-2,-6,-10,-11,-7,-52,-58,-59,-60,-24,-25,-54,23,-4,-14,-21,-22,-23,-44,-43,-28,-1,-9,23,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,-48,-53,23,-32,-56,-55,-57,-13,-12,-27,-50,-49,-8,-32,]),'TkCBlock':([5,7,11,12,13,14,15,20,22,33,34,37,38,42,43,44,45,47,50,51,52,66,67,73,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,105,106,107,108,110,111,112,113,115,119,],[22,-15,-16,-17,-18,-19,-20,-26,-2,-52,-58,-59,-60,-24,-25,-54,78,-14,-21,-22,-23,-44,-43,-28,-1,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,-48,-53,-32,-56,-55,-57,-13,-12,-27,-50,-49,-32,]),'TkEnd':([7,11,12,13,14,15,20,22,33,34,37,38,42,43,44,47,50,51,52,66,67,73,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,105,106,107,108,110,111,112,113,115,119,],[-15,-16,-17,-18,-19,-20,-26,-2,-52,-58,-59,-60,-24,-25,-54,-14,-21,-22,-23,-44,-43,-28,-1,112,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,-48,-53,-32,-56,-55,-57,-13,-12,-27,-50,-49,-32,]),'TkFi':([7,11,12,13,14,15,20,22,33,34,37,38,39,40,42,43,44,47,50,51,52,66,67,73,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,105,106,107,108,110,111,112,113,115,119,],[-15,-16,-17,-18,-19,-20,-26,-2,-52,-58,-59,-60,73,-30,-24,-25,-54,-14,-21,-22,-23,-44,-43,-28,-1,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,-48,-53,-29,-31,-32,-56,-55,-57,-13,-12,-27,-50,-49,-32,]),'TkGuard':([7,11,12,13,14,15,20,22,33,34,37,38,39,40,42,43,44,47,50,51,52,66,67,73,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,105,106,107,108,110,111,112,113,115,119,],[-15,-16,-17,-18,-19,-20,-26,-2,-52,-58,-59,-60,74,-30,-24,-25,-54,-14,-21,-22,-23,-44,-43,-28,-1,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,-48,-53,-29,-31,-32,-56,-55,-57,-13,-12,-27,-50,-49,-32,]),'TkOBracket':([10,],[28,]),'TkAsig':([16,],[29,]),'TkNot':([17,18,19,29,31,32,36,54,55,56,57,58,59,60,61,62,63,64,68,69,70,71,74,76,77,81,82,114,116,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TkMinus':([17,18,19,29,30,31,32,33,34,36,37,38,41,42,50,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,74,76,77,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,114,116,118,119,],[31,31,31,31,55,31,31,-52,-58,31,-59,-60,55,55,55,31,31,31,31,31,31,31,31,31,31,31,-44,-43,31,31,31,31,55,31,31,31,31,31,-32,-33,-34,55,55,55,55,55,55,55,55,-45,-46,-47,55,-48,-53,-32,55,55,55,31,31,55,-32,]),'TkOpenPar':([17,18,19,29,31,32,33,35,36,52,54,55,56,57,58,59,60,61,62,63,64,68,69,70,71,74,76,77,81,82,113,114,115,116,],[36,36,36,36,36,36,69,71,36,71,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-50,36,-49,36,]),'TkNum':([17,18,19,29,31,32,36,49,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,81,82,114,116,],[34,34,34,34,34,34,34,80,34,34,34,34,34,34,34,34,34,34,34,96,34,34,34,34,34,34,34,34,34,34,34,]),'TkTrue':([17,18,19,29,31,32,36,54,55,56,57,58,59,60,61,62,63,64,68,69,70,71,74,76,77,81,82,114,116,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TkFalse':([17,18,19,29,31,32,36,54,55,56,57,58,59,60,61,62,63,64,68,69,70,71,74,76,77,81,82,114,116,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'TkString':([19,76,77,116,],[44,44,44,44,]),'TkComma':([24,25,26,27,33,34,37,38,50,51,66,67,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,110,111,117,],[48,-10,-11,48,-52,-58,-59,-60,81,82,-44,-43,-9,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,-48,-53,-13,-12,48,]),'TkSoForth':([28,],[49,]),'TkArrow':([30,33,34,37,38,41,66,67,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,],[53,-52,-58,-59,-60,75,-44,-43,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,-48,-53,]),'TkPlus':([30,33,34,37,38,41,42,43,44,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,106,107,108,110,111,118,119,],[54,-52,-58,-59,-60,54,76,77,-54,54,-44,-43,54,-32,-33,-34,54,54,54,54,54,54,54,54,-45,-46,-47,54,-48,-53,-32,-56,-55,-57,54,54,54,-32,]),'TkMult':([30,33,34,37,38,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,118,119,],[56,-52,-58,-59,-60,56,56,56,-44,-43,56,56,56,-34,56,56,56,56,56,56,56,56,-45,-46,-47,56,-48,-53,56,56,56,56,56,56,]),'TkLeq':([30,33,34,37,38,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,118,119,],[57,-52,-58,-59,-60,57,57,57,-44,-43,57,-32,-33,-34,None,None,None,None,57,57,57,57,-45,-46,-47,57,-48,-53,-32,57,57,57,57,-32,]),'TkGeq':([30,33,34,37,38,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,118,119,],[58,-52,-58,-59,-60,58,58,58,-44,-43,58,-32,-33,-34,None,None,None,None,58,58,58,58,-45,-46,-47,58,-48,-53,-32,58,58,58,58,-32,]),'TkLess':([30,33,34,37,38,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,118,119,],[59,-52,-58,-59,-60,59,59,59,-44,-43,59,-32,-33,-34,None,None,None,None,59,59,59,59,-45,-46,-47,59,-48,-53,-32,59,59,59,59,-32,]),'TkGreater':([30,33,34,37,38,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,118,119,],[60,-52,-58,-59,-60,60,60,60,-44,-43,60,-32,-33,-34,None,None,None,None,60,60,60,60,-45,-46,-47,60,-48,-53,-32,60,60,60,60,-32,]),'TkEqual':([30,33,34,37,38,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,118,119,],[61,-52,-58,-59,-60,61,61,61,-44,-43,61,-32,-33,-34,-35,-36,-37,-38,-39,-40,61,61,-45,-46,-47,61,-48,-53,-32,61,61,61,61,-32,]),'TkNEqual':([30,33,34,37,38,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,118,119,],[62,-52,-58,-59,-60,62,62,62,-44,-43,62,-32,-33,-34,-35,-36,-37,-38,-39,-40,62,62,-45,-46,-47,62,-48,-53,-32,62,62,62,62,-32,]),'TkOr':([30,33,34,37,38,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,118,119,],[63,-52,-58,-59,-60,63,63,63,-44,-43,63,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,63,-48,-53,-32,63,63,63,63,-32,]),'TkAnd':([30,33,34,37,38,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,118,119,],[64,-52,-58,-59,-60,64,64,64,-44,-43,64,-32,-33,-34,-35,-36,-37,-38,-39,-40,64,-42,-45,-46,-47,64,-48,-53,-32,64,64,64,64,-32,]),'TkApp':([30,33,34,35,37,38,41,42,50,52,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,105,108,110,111,113,115,118,119,],[65,68,-58,70,-59,-60,65,65,65,70,-44,-43,65,65,65,65,65,65,65,65,65,65,65,65,-45,-46,65,65,65,-53,65,65,65,65,-50,-49,65,65,]),'TkClosePar':([33,34,37,38,66,67,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,118,],[-52,-58,-59,-60,-44,-43,102,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,113,-48,115,-53,-51,]),'TkTwoPoints':([33,34,37,38,66,67,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,],[-52,-58,-59,-60,-44,-43,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,114,-48,-53,]),'TkCBracket':([80,],[109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,21,23,53,75,],[1,15,15,15,15,15,]),'new_block':([0,2,21,23,53,75,],[2,2,2,2,2,2,]),'declarations':([2,],[4,]),'instructions':([2,21,53,75,],[5,45,83,104,]),'declaration':([2,21,],[6,46,]),'instruction':([2,21,23,53,75,],[7,7,47,7,7,]),'while':([2,21,23,53,75,],[11,11,11,11,11,]),'if':([2,21,23,53,75,],[12,12,12,12,12,]),'print':([2,21,23,53,75,],[13,13,13,13,13,]),'skip':([2,21,23,53,75,],[14,14,14,14,14,]),'idlist':([8,9,109,],[24,27,117,]),'id':([8,9,48,109,],[25,25,79,25,]),'expression':([17,18,19,29,31,32,36,54,55,56,57,58,59,60,61,62,63,64,68,69,70,71,74,76,77,81,82,114,116,],[30,41,42,50,66,67,72,84,85,86,87,88,89,90,91,92,93,94,97,99,100,99,41,105,108,110,111,118,119,]),'functionMod':([17,18,19,29,31,32,36,54,55,56,57,58,59,60,61,62,63,64,68,69,70,71,74,76,77,81,82,114,116,],[35,35,35,52,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'guardlist':([18,],[39,]),'guard':([18,74,],[40,103,]),'string':([19,76,77,116,],[43,106,107,106,]),'expressionlist':([29,],[51,]),'twopoints':([69,71,],[98,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> new_block declarations TkSemicolon instructions TkCBlock','program',5,'p_program','parser.py',67),
  ('program -> new_block instructions TkCBlock','program',3,'p_program','parser.py',68),
  ('new_block -> TkOBlock','new_block',1,'p_new_block','parser.py',78),
  ('declarations -> declarations TkSemicolon declaration','declarations',3,'p_declarations','parser.py',89),
  ('declarations -> declaration','declarations',1,'p_declarations','parser.py',90),
  ('declaration -> TkInt idlist','declaration',2,'p_declaration','parser.py',93),
  ('declaration -> TkBool idlist','declaration',2,'p_declaration','parser.py',94),
  ('declaration -> TkFunction TkOBracket TkSoForth TkNum TkCBracket idlist','declaration',6,'p_declaration','parser.py',95),
  ('idlist -> idlist TkComma id','idlist',3,'p_idlist','parser.py',106),
  ('idlist -> id','idlist',1,'p_idlist','parser.py',107),
  ('id -> TkId','id',1,'p_id','parser.py',114),
  ('expressionlist -> expressionlist TkComma expression','expressionlist',3,'p_expression_list','parser.py',118),
  ('expressionlist -> expression TkComma expression','expressionlist',3,'p_expression_list','parser.py',119),
  ('instructions -> instructions TkSemicolon instruction','instructions',3,'p_instructions','parser.py',132),
  ('instructions -> instruction','instructions',1,'p_instructions','parser.py',133),
  ('instruction -> while','instruction',1,'p_instruction','parser.py',140),
  ('instruction -> if','instruction',1,'p_instruction','parser.py',141),
  ('instruction -> print','instruction',1,'p_instruction','parser.py',142),
  ('instruction -> skip','instruction',1,'p_instruction','parser.py',143),
  ('instruction -> program','instruction',1,'p_instruction','parser.py',144),
  ('instruction -> TkId TkAsig expression','instruction',3,'p_assignment','parser.py',149),
  ('instruction -> TkId TkAsig expressionlist','instruction',3,'p_assignment','parser.py',150),
  ('instruction -> TkId TkAsig functionMod','instruction',3,'p_assignment','parser.py',151),
  ('print -> TkPrint expression','print',2,'p_print','parser.py',190),
  ('print -> TkPrint string','print',2,'p_print','parser.py',191),
  ('skip -> TkSkip','skip',1,'p_skip','parser.py',195),
  ('while -> TkWhile expression TkArrow instructions TkEnd','while',5,'p_while','parser.py',199),
  ('if -> TkIf guardlist TkFi','if',3,'p_if','parser.py',209),
  ('guardlist -> guardlist TkGuard guard','guardlist',3,'p_guardlist','parser.py',213),
  ('guardlist -> guard','guardlist',1,'p_guardlist','parser.py',214),
  ('guard -> expression TkArrow instructions','guard',3,'p_guard','parser.py',221),
  ('expression -> expression TkPlus expression','expression',3,'p_expression_binoperators','parser.py',235),
  ('expression -> expression TkMinus expression','expression',3,'p_expression_binoperators','parser.py',236),
  ('expression -> expression TkMult expression','expression',3,'p_expression_binoperators','parser.py',237),
  ('expression -> expression TkLeq expression','expression',3,'p_expression_binoperators','parser.py',238),
  ('expression -> expression TkGeq expression','expression',3,'p_expression_binoperators','parser.py',239),
  ('expression -> expression TkLess expression','expression',3,'p_expression_binoperators','parser.py',240),
  ('expression -> expression TkGreater expression','expression',3,'p_expression_binoperators','parser.py',241),
  ('expression -> expression TkEqual expression','expression',3,'p_expression_binoperators','parser.py',242),
  ('expression -> expression TkNEqual expression','expression',3,'p_expression_binoperators','parser.py',243),
  ('expression -> expression TkOr expression','expression',3,'p_expression_binoperators','parser.py',244),
  ('expression -> expression TkAnd expression','expression',3,'p_expression_binoperators','parser.py',245),
  ('expression -> TkNot expression','expression',2,'p_expression_unoperators','parser.py',307),
  ('expression -> TkMinus expression','expression',2,'p_expression_unoperators','parser.py',308),
  ('expression -> expression TkApp TkId','expression',3,'p_expression_dotaccess','parser.py',326),
  ('expression -> expression TkApp TkNum','expression',3,'p_expression_dotaccess','parser.py',327),
  ('expression -> TkId TkApp expression','expression',3,'p_expression_app','parser.py',335),
  ('expression -> functionMod TkApp expression','expression',3,'p_expression_function_app','parser.py',351),
  ('functionMod -> functionMod TkOpenPar twopoints TkClosePar','functionMod',4,'p_function_mod','parser.py',361),
  ('functionMod -> TkId TkOpenPar twopoints TkClosePar','functionMod',4,'p_function_mod','parser.py',362),
  ('twopoints -> expression TkTwoPoints expression','twopoints',3,'p_twopoints','parser.py',377),
  ('expression -> TkId','expression',1,'p_expression_id','parser.py',392),
  ('expression -> TkOpenPar expression TkClosePar','expression',3,'p_expression_par','parser.py',399),
  ('string -> TkString','string',1,'p_type_string','parser.py',407),
  ('string -> string TkPlus string','string',3,'p_sum_string','parser.py',411),
  ('string -> expression TkPlus string','string',3,'p_sum_string','parser.py',412),
  ('string -> string TkPlus expression','string',3,'p_sum_string','parser.py',413),
  ('expression -> TkNum','expression',1,'p_expression_literal','parser.py',417),
  ('expression -> TkTrue','expression',1,'p_expression_literal','parser.py',418),
  ('expression -> TkFalse','expression',1,'p_expression_literal','parser.py',419),
]
