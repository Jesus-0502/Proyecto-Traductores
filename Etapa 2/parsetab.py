
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTkOrleftTkAndrightTkNotnonassocTkLessTkLeqTkGreaterTkGeqTkEqualTkNEqualleftTkPlusTkMinusleftTkMultrightUMINUSERROR TkAnd TkApp TkArrow TkAsig TkBool TkCBlock TkCBracket TkClosePar TkComma TkElse TkEnd TkEqual TkFalse TkFi TkFunction TkGeq TkGreater TkGuard TkId TkIf TkInt TkLeq TkLess TkMinus TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOpenPar TkOr TkPlus TkPrint TkSemicolon TkSkip TkSoForth TkString TkTrue TkTwoPoints TkWhileprogram : TkOBlock declarations TkSemicolon instructions TkCBlock\n                | TkOBlock instructions TkCBlockdeclarations : declarations TkSemicolon declaration\n                    | declarationdeclaration : TkInt idlist\n                   | TkBool idlist\n                   | TkFunction TkOBracket TkSoForth TkNum TkCBracket idlistidlist : idlist TkComma TkId\n              | TkIdinstructions : instructions TkSemicolon instruction\n                    | instructioninstruction : assignment\n                   | while\n                   | if\n                   | print\n                   | skipassignment : TkId TkAsig expressionprint : TkPrint expression\n             | TkPrint stringskip : TkSkipwhile : TkWhile expression TkArrow instructions TkEndif : TkIf guardlist TkFiguardlist : guard\n                 | guard TkGuard guardlistguard : expression TkArrow instructionsexpression : expression TkPlus expression\n                | expression TkMinus expression\n                | expression TkMult expression\n                | expression TkLeq expression\n                | expression TkGeq expression\n                | expression TkLess expression\n                | expression TkGreater expression\n                | expression TkEqual expression\n                | expression TkNEqual expression\n                | expression TkOr expression\n                | expression TkAnd expressionexpression : expression TkApp TkId\n                  | expression TkApp TkNumexpression : TkNot expressionexpression : TkMinus expression %prec UMINUSexpression : TkOpenPar expression TkCloseParexpression : TkNum\n                  | TkTrue\n                  | TkFalseexpression : TkIdexpression : appapp : TkId accesslistaccesslist : access accesslist\n                  | emptyaccess : TkOpenPar index TkCloseParindex : TkNum TkTwoPoints expressionstring : TkStringstring : string TkPlus string\n                | expression TkPlus string\n                | string TkPlus expressionempty :'
    
_lr_action_items = {'TkOBlock':([0,],[2,]),'$end':([1,21,74,],[0,-2,-1,]),'TkInt':([2,20,],[7,7,]),'TkBool':([2,20,],[8,8,]),'TkFunction':([2,20,],[9,9,]),'TkId':([2,7,8,16,17,18,20,22,27,29,32,33,46,49,50,51,52,53,54,55,56,57,58,59,60,61,70,71,72,73,101,104,105,],[15,24,24,30,30,30,15,15,30,30,30,30,75,15,30,30,30,30,30,30,30,30,30,30,30,89,30,15,30,30,24,30,30,]),'TkWhile':([2,20,22,49,71,],[16,16,16,16,16,]),'TkIf':([2,20,22,49,71,],[17,17,17,17,17,]),'TkPrint':([2,20,22,49,71,],[18,18,18,18,18,]),'TkSkip':([2,20,22,49,71,],[19,19,19,19,19,]),'TkSemicolon':([3,4,5,6,10,11,12,13,14,19,23,24,25,30,31,34,35,36,40,41,42,43,44,45,48,62,63,64,65,67,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,98,99,100,102,103,106,108,],[20,22,-4,-11,-12,-13,-14,-15,-16,-20,-5,-9,-6,-45,-42,-43,-44,-46,-18,-19,-52,22,-3,-10,-17,-40,-47,-56,-49,-39,-22,-8,22,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-48,-41,22,-26,-54,-53,-55,-21,-50,-7,-26,]),'TkCBlock':([4,6,10,11,12,13,14,19,30,31,34,35,36,40,41,42,43,45,48,62,63,64,65,67,69,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,98,99,100,102,103,108,],[21,-11,-12,-13,-14,-15,-16,-20,-45,-42,-43,-44,-46,-18,-19,-52,74,-10,-17,-40,-47,-56,-49,-39,-22,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-48,-41,-26,-54,-53,-55,-21,-50,-26,]),'TkEnd':([6,10,11,12,13,14,19,30,31,34,35,36,40,41,42,45,48,62,63,64,65,67,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,98,99,100,102,103,108,],[-11,-12,-13,-14,-15,-16,-20,-45,-42,-43,-44,-46,-18,-19,-52,-10,-17,-40,-47,-56,-49,-39,-22,102,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-48,-41,-26,-54,-53,-55,-21,-50,-26,]),'TkGuard':([6,10,11,12,13,14,19,30,31,34,35,36,38,40,41,42,45,48,62,63,64,65,67,69,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,98,99,100,102,103,108,],[-11,-12,-13,-14,-15,-16,-20,-45,-42,-43,-44,-46,70,-18,-19,-52,-10,-17,-40,-47,-56,-49,-39,-22,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-48,-41,-25,-26,-54,-53,-55,-21,-50,-26,]),'TkFi':([6,10,11,12,13,14,19,30,31,34,35,36,37,38,40,41,42,45,48,62,63,64,65,67,69,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,102,103,108,],[-11,-12,-13,-14,-15,-16,-20,-45,-42,-43,-44,-46,69,-23,-18,-19,-52,-10,-17,-40,-47,-56,-49,-39,-22,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-48,-41,-24,-25,-26,-54,-53,-55,-21,-50,-26,]),'TkOBracket':([9,],[26,]),'TkAsig':([15,],[27,]),'TkNot':([16,17,18,27,29,32,33,50,51,52,53,54,55,56,57,58,59,60,70,72,73,104,105,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TkMinus':([16,17,18,27,28,29,30,31,32,33,34,35,36,39,40,48,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,67,68,70,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,104,105,107,108,],[29,29,29,29,51,29,-45,-42,29,29,-43,-44,-46,51,51,51,29,29,29,29,29,29,29,29,29,29,29,-40,-47,-56,-49,51,51,29,29,29,-26,-27,-28,51,51,51,51,51,51,51,51,-37,-38,-48,-41,-26,51,-50,29,29,51,-26,]),'TkOpenPar':([16,17,18,27,29,30,32,33,50,51,52,53,54,55,56,57,58,59,60,64,70,72,73,103,104,105,],[33,33,33,33,33,66,33,33,33,33,33,33,33,33,33,33,33,33,33,66,33,33,33,-50,33,33,]),'TkNum':([16,17,18,27,29,32,33,47,50,51,52,53,54,55,56,57,58,59,60,61,66,70,72,73,104,105,],[31,31,31,31,31,31,31,76,31,31,31,31,31,31,31,31,31,31,31,90,93,31,31,31,31,31,]),'TkTrue':([16,17,18,27,29,32,33,50,51,52,53,54,55,56,57,58,59,60,70,72,73,104,105,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TkFalse':([16,17,18,27,29,32,33,50,51,52,53,54,55,56,57,58,59,60,70,72,73,104,105,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'TkString':([18,72,73,105,],[42,42,42,42,]),'TkComma':([23,24,25,75,106,],[46,-9,46,-8,46,]),'TkSoForth':([26,],[47,]),'TkArrow':([28,30,31,34,35,36,39,62,63,64,65,67,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,103,],[49,-45,-42,-43,-44,-46,71,-40,-47,-56,-49,-39,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-48,-41,-50,]),'TkPlus':([28,30,31,34,35,36,39,40,41,42,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,98,99,100,103,107,108,],[50,-45,-42,-43,-44,-46,50,72,73,-52,50,-40,-47,-56,-49,50,50,-26,-27,-28,50,50,50,50,50,50,50,50,-37,-38,-48,-41,-26,-54,-53,-55,-50,50,-26,]),'TkMult':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[52,-45,-42,-43,-44,-46,52,52,52,-40,-47,-56,-49,52,52,52,52,-28,52,52,52,52,52,52,52,52,-37,-38,-48,-41,52,52,-50,52,52,]),'TkLeq':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[53,-45,-42,-43,-44,-46,53,53,53,-40,-47,-56,-49,53,53,-26,-27,-28,None,None,None,None,None,None,53,53,-37,-38,-48,-41,-26,53,-50,53,-26,]),'TkGeq':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[54,-45,-42,-43,-44,-46,54,54,54,-40,-47,-56,-49,54,54,-26,-27,-28,None,None,None,None,None,None,54,54,-37,-38,-48,-41,-26,54,-50,54,-26,]),'TkLess':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[55,-45,-42,-43,-44,-46,55,55,55,-40,-47,-56,-49,55,55,-26,-27,-28,None,None,None,None,None,None,55,55,-37,-38,-48,-41,-26,55,-50,55,-26,]),'TkGreater':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[56,-45,-42,-43,-44,-46,56,56,56,-40,-47,-56,-49,56,56,-26,-27,-28,None,None,None,None,None,None,56,56,-37,-38,-48,-41,-26,56,-50,56,-26,]),'TkEqual':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[57,-45,-42,-43,-44,-46,57,57,57,-40,-47,-56,-49,57,57,-26,-27,-28,None,None,None,None,None,None,57,57,-37,-38,-48,-41,-26,57,-50,57,-26,]),'TkNEqual':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[58,-45,-42,-43,-44,-46,58,58,58,-40,-47,-56,-49,58,58,-26,-27,-28,None,None,None,None,None,None,58,58,-37,-38,-48,-41,-26,58,-50,58,-26,]),'TkOr':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[59,-45,-42,-43,-44,-46,59,59,59,-40,-47,-56,-49,-39,59,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-48,-41,-26,59,-50,59,-26,]),'TkAnd':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[60,-45,-42,-43,-44,-46,60,60,60,-40,-47,-56,-49,-39,60,-26,-27,-28,-29,-30,-31,-32,-33,-34,60,-36,-37,-38,-48,-41,-26,60,-50,60,-26,]),'TkApp':([28,30,31,34,35,36,39,40,48,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,100,103,107,108,],[61,-45,-42,-43,-44,-46,61,61,61,-40,-47,-56,-49,-39,61,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-48,-41,-26,61,-50,61,-26,]),'TkClosePar':([30,31,34,35,36,62,63,64,65,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,103,107,],[-45,-42,-43,-44,-46,-40,-47,-56,-49,-39,94,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-48,103,-41,-50,-51,]),'TkCBracket':([76,],[101,]),'TkTwoPoints':([93,],[104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declarations':([2,],[3,]),'instructions':([2,20,49,71,],[4,43,77,96,]),'declaration':([2,20,],[5,44,]),'instruction':([2,20,22,49,71,],[6,6,45,6,6,]),'assignment':([2,20,22,49,71,],[10,10,10,10,10,]),'while':([2,20,22,49,71,],[11,11,11,11,11,]),'if':([2,20,22,49,71,],[12,12,12,12,12,]),'print':([2,20,22,49,71,],[13,13,13,13,13,]),'skip':([2,20,22,49,71,],[14,14,14,14,14,]),'idlist':([7,8,101,],[23,25,106,]),'expression':([16,17,18,27,29,32,33,50,51,52,53,54,55,56,57,58,59,60,70,72,73,104,105,],[28,39,40,48,62,67,68,78,79,80,81,82,83,84,85,86,87,88,39,97,100,107,108,]),'app':([16,17,18,27,29,32,33,50,51,52,53,54,55,56,57,58,59,60,70,72,73,104,105,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'guardlist':([17,70,],[37,95,]),'guard':([17,70,],[38,38,]),'string':([18,72,73,105,],[41,98,99,98,]),'accesslist':([30,64,],[63,91,]),'access':([30,64,],[64,64,]),'empty':([30,64,],[65,65,]),'index':([66,],[92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> TkOBlock declarations TkSemicolon instructions TkCBlock','program',5,'p_program','parser.py',25),
  ('program -> TkOBlock instructions TkCBlock','program',3,'p_program','parser.py',26),
  ('declarations -> declarations TkSemicolon declaration','declarations',3,'p_declarations','parser.py',35),
  ('declarations -> declaration','declarations',1,'p_declarations','parser.py',36),
  ('declaration -> TkInt idlist','declaration',2,'p_declaration','parser.py',43),
  ('declaration -> TkBool idlist','declaration',2,'p_declaration','parser.py',44),
  ('declaration -> TkFunction TkOBracket TkSoForth TkNum TkCBracket idlist','declaration',6,'p_declaration','parser.py',45),
  ('idlist -> idlist TkComma TkId','idlist',3,'p_idlist','parser.py',52),
  ('idlist -> TkId','idlist',1,'p_idlist','parser.py',53),
  ('instructions -> instructions TkSemicolon instruction','instructions',3,'p_instructions','parser.py',62),
  ('instructions -> instruction','instructions',1,'p_instructions','parser.py',63),
  ('instruction -> assignment','instruction',1,'p_instruction','parser.py',70),
  ('instruction -> while','instruction',1,'p_instruction','parser.py',71),
  ('instruction -> if','instruction',1,'p_instruction','parser.py',72),
  ('instruction -> print','instruction',1,'p_instruction','parser.py',73),
  ('instruction -> skip','instruction',1,'p_instruction','parser.py',74),
  ('assignment -> TkId TkAsig expression','assignment',3,'p_assignment','parser.py',78),
  ('print -> TkPrint expression','print',2,'p_print','parser.py',82),
  ('print -> TkPrint string','print',2,'p_print','parser.py',83),
  ('skip -> TkSkip','skip',1,'p_skip','parser.py',87),
  ('while -> TkWhile expression TkArrow instructions TkEnd','while',5,'p_while','parser.py',91),
  ('if -> TkIf guardlist TkFi','if',3,'p_if','parser.py',95),
  ('guardlist -> guard','guardlist',1,'p_guardlist','parser.py',99),
  ('guardlist -> guard TkGuard guardlist','guardlist',3,'p_guardlist','parser.py',100),
  ('guard -> expression TkArrow instructions','guard',3,'p_guard','parser.py',107),
  ('expression -> expression TkPlus expression','expression',3,'p_expression_binoperators','parser.py',115),
  ('expression -> expression TkMinus expression','expression',3,'p_expression_binoperators','parser.py',116),
  ('expression -> expression TkMult expression','expression',3,'p_expression_binoperators','parser.py',117),
  ('expression -> expression TkLeq expression','expression',3,'p_expression_binoperators','parser.py',118),
  ('expression -> expression TkGeq expression','expression',3,'p_expression_binoperators','parser.py',119),
  ('expression -> expression TkLess expression','expression',3,'p_expression_binoperators','parser.py',120),
  ('expression -> expression TkGreater expression','expression',3,'p_expression_binoperators','parser.py',121),
  ('expression -> expression TkEqual expression','expression',3,'p_expression_binoperators','parser.py',122),
  ('expression -> expression TkNEqual expression','expression',3,'p_expression_binoperators','parser.py',123),
  ('expression -> expression TkOr expression','expression',3,'p_expression_binoperators','parser.py',124),
  ('expression -> expression TkAnd expression','expression',3,'p_expression_binoperators','parser.py',125),
  ('expression -> expression TkApp TkId','expression',3,'p_expression_dotaccess','parser.py',151),
  ('expression -> expression TkApp TkNum','expression',3,'p_expression_dotaccess','parser.py',152),
  ('expression -> TkNot expression','expression',2,'p_expression_not','parser.py',156),
  ('expression -> TkMinus expression','expression',2,'p_expression_uminus','parser.py',160),
  ('expression -> TkOpenPar expression TkClosePar','expression',3,'p_expression_group','parser.py',164),
  ('expression -> TkNum','expression',1,'p_expression_literal','parser.py',168),
  ('expression -> TkTrue','expression',1,'p_expression_literal','parser.py',169),
  ('expression -> TkFalse','expression',1,'p_expression_literal','parser.py',170),
  ('expression -> TkId','expression',1,'p_expression_id','parser.py',180),
  ('expression -> app','expression',1,'p_expression_app','parser.py',184),
  ('app -> TkId accesslist','app',2,'p_app','parser.py',188),
  ('accesslist -> access accesslist','accesslist',2,'p_accesslist','parser.py',192),
  ('accesslist -> empty','accesslist',1,'p_accesslist','parser.py',193),
  ('access -> TkOpenPar index TkClosePar','access',3,'p_access','parser.py',200),
  ('index -> TkNum TkTwoPoints expression','index',3,'p_index','parser.py',204),
  ('string -> TkString','string',1,'p_type_string','parser.py',208),
  ('string -> string TkPlus string','string',3,'p_sum_string','parser.py',212),
  ('string -> expression TkPlus string','string',3,'p_sum_string','parser.py',213),
  ('string -> string TkPlus expression','string',3,'p_sum_string','parser.py',214),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',220),
]
