
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ERROR TkAnd TkApp TkArrow TkAsig TkBool TkCBlock TkCBracket TkClosePar TkComma TkElse TkEnd TkEqual TkFalse TkFi TkFunction TkGeq TkGreater TkGuard TkId TkIf TkInt TkLeq TkLess TkMinus TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOpenPar TkOr TkPlus TkPrint TkSemicolon TkSkip TkSoForth TkString TkTrue TkTwoPoints TkWhileprogram : TkOBlock declarationlist TkSemicolon instructionlist TkCBlock declarationlist : declarationlist TkSemicolon declaration\n                        | declaration  declaration : TkInt idlist\n                    | TkBool idlist idlist : idlist TkComma TkId\n                        | TkId instructionlist : instructionlist TkSemicolon instruction\n                        | instructioninstruction : TkId TkAsig TkNumstring : string TkPlus TkString\n                | TkString'
    
_lr_action_items = {'TkOBlock':([0,],[2,]),'$end':([1,17,],[0,-1,]),'TkInt':([2,7,],[5,5,]),'TkBool':([2,7,],[6,6,]),'TkSemicolon':([3,4,8,9,10,11,12,13,19,20,21,],[7,-3,-4,-7,-5,16,-2,-9,-6,-8,-10,]),'TkId':([5,6,7,15,16,],[9,9,14,19,14,]),'TkComma':([8,9,10,19,],[15,-7,15,-6,]),'TkCBlock':([11,13,20,21,],[17,-9,-8,-10,]),'TkAsig':([14,],[18,]),'TkNum':([18,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declarationlist':([2,],[3,]),'declaration':([2,7,],[4,12,]),'idlist':([5,6,],[8,10,]),'instructionlist':([7,],[11,]),'instruction':([7,16,],[13,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> TkOBlock declarationlist TkSemicolon instructionlist TkCBlock','program',5,'p_program','parser.py',10),
  ('declarationlist -> declarationlist TkSemicolon declaration','declarationlist',3,'p_declarationlist','parser.py',16),
  ('declarationlist -> declaration','declarationlist',1,'p_declarationlist','parser.py',17),
  ('declaration -> TkInt idlist','declaration',2,'p_declaration','parser.py',24),
  ('declaration -> TkBool idlist','declaration',2,'p_declaration','parser.py',25),
  ('idlist -> idlist TkComma TkId','idlist',3,'p_idlist','parser.py',29),
  ('idlist -> TkId','idlist',1,'p_idlist','parser.py',30),
  ('instructionlist -> instructionlist TkSemicolon instruction','instructionlist',3,'p_instructionlist','parser.py',37),
  ('instructionlist -> instruction','instructionlist',1,'p_instructionlist','parser.py',38),
  ('instruction -> TkId TkAsig TkNum','instruction',3,'p_instruction','parser.py',45),
  ('string -> string TkPlus TkString','string',3,'p_type_string','parser.py',104),
  ('string -> TkString','string',1,'p_type_string','parser.py',105),
]
